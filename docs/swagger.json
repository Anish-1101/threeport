{
    "swagger": "2.0",
    "info": {
        "description": "Threeport RESTful API.",
        "title": "Threeport RESTful API",
        "termsOfService": "https://threeport.io/api-tos/",
        "contact": {
            "name": "Threeport Admin",
            "url": "https://threeport.io/support",
            "email": "support@threeport.io"
        },
        "version": "0.1.0"
    },
    "host": "rest-api.threeport.io",
    "basePath": "/",
    "paths": {
        "/accounts/versions": {
            "get": {
                "description": "Returns the supported versions for the Account.",
                "produces": [
                    "application/json"
                ],
                "summary": "gets supported versions the Account.",
                "operationId": "account-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/blocks/versions": {
            "get": {
                "description": "Returns the supported versions for the Block.",
                "produces": [
                    "application/json"
                ],
                "summary": "gets supported versions the Block.",
                "operationId": "block-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/coincoverOrders/versions": {
            "get": {
                "description": "Returns the supported versions for the CoincoverOrder.",
                "produces": [
                    "application/json"
                ],
                "summary": "gets supported versions the CoincoverOrder.",
                "operationId": "coincoverOrder-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/companies/versions": {
            "get": {
                "description": "Returns the supported versions for the Company.",
                "produces": [
                    "application/json"
                ],
                "summary": "gets supported versions the Company.",
                "operationId": "company-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/networks/versions": {
            "get": {
                "description": "Returns the supported versions for the Network.",
                "produces": [
                    "application/json"
                ],
                "summary": "gets supported versions the Network.",
                "operationId": "network-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/nodes/versions": {
            "get": {
                "description": "Returns the supported versions for the Node.",
                "produces": [
                    "application/json"
                ],
                "summary": "gets supported versions the Node.",
                "operationId": "node-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/pools/versions": {
            "get": {
                "description": "Returns the supported versions for the Pool.",
                "produces": [
                    "application/json"
                ],
                "summary": "gets supported versions the Pool.",
                "operationId": "pool-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/shares/versions": {
            "get": {
                "description": "Returns the supported versions for the Share.",
                "produces": [
                    "application/json"
                ],
                "summary": "gets supported versions the Share.",
                "operationId": "share-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/tokens/versions": {
            "get": {
                "description": "Returns the supported versions for the Token.",
                "produces": [
                    "application/json"
                ],
                "summary": "gets supported versions the Token.",
                "operationId": "token-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/transactions/versions": {
            "get": {
                "description": "Returns the supported versions for the Transaction.",
                "produces": [
                    "application/json"
                ],
                "summary": "gets supported versions the Transaction.",
                "operationId": "transaction-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/transfers/versions": {
            "get": {
                "description": "Returns the supported versions for the Transfer.",
                "produces": [
                    "application/json"
                ],
                "summary": "gets supported versions the Transfer.",
                "operationId": "transfer-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/users/versions": {
            "get": {
                "description": "Returns the supported versions for the User.",
                "produces": [
                    "application/json"
                ],
                "summary": "gets supported versions the User.",
                "operationId": "user-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/v0/accounts": {
            "get": {
                "description": "Get all accounts from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all accounts.",
                "operationId": "get-accounts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account search by address",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "account search by networkid",
                        "name": "networkid",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "account search by nodeid",
                        "name": "nodeid",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "account search by poolid",
                        "name": "poolid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new Threeport account to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new Threeport account.",
                "operationId": "add-account",
                "parameters": [
                    {
                        "description": "Account object",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Account"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/accounts/{id}": {
            "get": {
                "description": "Get a particular account by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets an account.",
                "operationId": "get-account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces an account in the database. Provide all required fields, if optional fields not provided they will be removed.\nNote: The Account object shown in Parameters below includes\nrelated objects, e.g. ToTransactions and FromTransactions. A request body that includes these\nobjects will be accepted, but they will not be updated. Call the PUT method\nfor those objects individually to modify them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "replaces an existing account.",
                "operationId": "replace-account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Account object",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Account"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an account from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes an account.",
                "operationId": "delete-account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an account in the database.  Must provide all fields.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing account.",
                "operationId": "update-account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Account object",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Account"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/blocks": {
            "get": {
                "description": "Get all blocks from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all blocks.",
                "operationId": "get-blocks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "block search by height",
                        "name": "height",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "block search by networkid",
                        "name": "networkid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new Threeport block to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new Threeport block.",
                "operationId": "add-block",
                "parameters": [
                    {
                        "description": "Block object",
                        "name": "block",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Block"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/blocks/{id}": {
            "get": {
                "description": "Get a particular block by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a block.",
                "operationId": "get-block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces an account in the database. Provide all required fields, if optional fields not provided they will be removed.\nNote: The Block object shown in Parameters below includes\nrelated objects, e.g. Transactions. A request body that includes Transactions\nwill be accepted, but Transactions will not be updated. Call the PUT method to modify Transactions.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "replaces an existing block.",
                "operationId": "replace-block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Block object",
                        "name": "block",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Block"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a block from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a block.",
                "operationId": "delete-block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a block in the database.  Must provide all fields.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing block.",
                "operationId": "update-block",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Block object",
                        "name": "block",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Block"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/coincoverOrders": {
            "get": {
                "description": "Get all coincoverOrders from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all coincoverOrders.",
                "operationId": "get-coincoverOrders",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "coincoverorders search by levelusd",
                        "name": "levelusd",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "coincoverorders search by active",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "coincoverorders search by start",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "coincoverorders search by end",
                        "name": "end",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "coincoverorders search by signature",
                        "name": "signature",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "coincoverorders search by publickey",
                        "name": "publickey",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "coincoverorders search by nodeid",
                        "name": "nodeid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "coincoverorders search by coincoverorderid",
                        "name": "coincoverorderid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new Threeport coincoverOrder to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new Threeport coincoverOrder.",
                "operationId": "add-coincoverOrder",
                "parameters": [
                    {
                        "description": "CoincoverOrder object",
                        "name": "coincoverOrder",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.CoincoverOrder"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/coincoverOrders/{id}": {
            "get": {
                "description": "Get a particular coincoverOrder by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a coincoverOrder.",
                "operationId": "get-coincoverOrder",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces an coincoverOrder in the database. Provide all required fields, if optional fields not provided they will be removed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "replaces an existing coincoverOrder.",
                "operationId": "replace-coincoverOrder",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "CoincoverOrder object",
                        "name": "coincoverorder",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.CoincoverOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a coincoverOrder from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a coincoverOrder.",
                "operationId": "delete-coincoverOrder",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a coincoverOrder in the database.  Must provide all fields.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing coincoverOrder.",
                "operationId": "update-coincoverOrder",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "CoincoverOrder object",
                        "name": "coincoverorder",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.CoincoverOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/companies": {
            "get": {
                "description": "Get all companies from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all companies.",
                "operationId": "get-companies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "companies search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new company to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new company.",
                "operationId": "add-company",
                "parameters": [
                    {
                        "description": "Company object",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Company"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/companies/{id}": {
            "get": {
                "description": "Get a particular company by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a company.",
                "operationId": "get-company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a company in the database.  Provide all required fields, if optional fields not provided they will be removed.\nNote: The Company object shown in Parameters below includes\nrelated objects, e.g. Users and Shares.  A request body that includes these\nobjects will be accepted, but they will not be updated. Call the PUT method\nfor those objects individually to modify them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "replaces an existing company.",
                "operationId": "replace-company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Company object",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Company"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a company from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a company.",
                "operationId": "delete-company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a company in the database.  Provide one or more fields to update.\nNote: The Company object shown in Parameters below includes\nrelated objects, e.g. Users and Shares.  A request body that includes these\nobjects will be accepted, but they will not be updated.  Call the PUT/PATCH method\nfor those objects to modify them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing company.",
                "operationId": "update-company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Company object",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Company"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/networks": {
            "get": {
                "description": "Get all networks from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all networks.",
                "operationId": "get-networks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "network search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new Threeport network to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new Threeport network.",
                "operationId": "add-network",
                "parameters": [
                    {
                        "description": "Network object",
                        "name": "network",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Network"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/networks/{id}": {
            "get": {
                "description": "Get a particular network by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a network.",
                "operationId": "get-network",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a network in the database.  Provide all required fields, if optional fields not provided they will be removed.\nNote: The Network object shown in Parameters below includes\nrelated objects, e.g. Nodes, Tokens, Blocks and Accounts.  A request body that includes these\nobjects will be accepted, but they will not be updated. Call the PUT method\nfor those objects individually to modify them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "replaces an existing network.",
                "operationId": "replace-network",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Network object",
                        "name": "network",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Network"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a network from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a network.",
                "operationId": "delete-network",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a network in the database.  Must provide all fields.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing network.",
                "operationId": "update-network",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Network object",
                        "name": "network",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Network"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/nodes": {
            "get": {
                "description": "Get all nodes from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all nodes.",
                "operationId": "get-nodes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "node search by networkid",
                        "name": "networkid",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "node search by poolid",
                        "name": "poolid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new Threeport node to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new Threeport node.",
                "operationId": "add-node",
                "parameters": [
                    {
                        "description": "Node object",
                        "name": "node",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Node"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/nodes/{id}": {
            "get": {
                "description": "Get a particular node by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a node.",
                "operationId": "get-node",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a node in the database.  Must provide all fields.\nNote: The Node object shown in Parameters below includes\nrelated objects, e.g. CoincoverOrder and Account. A request body that includes these\nobjects will be accepted, but they will not be updated. Call the PUT method\nfor those objects individually to modify them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing node.",
                "operationId": "replace-node",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Node object",
                        "name": "node",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Node"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a node from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a node.",
                "operationId": "delete-node",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a node in the database.  Must provide all fields.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing node.",
                "operationId": "update-node",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Node object",
                        "name": "node",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Node"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/pools": {
            "get": {
                "description": "Get all pools from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all pools.",
                "operationId": "get-pools",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pool search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new Threeport pool to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new Threeport pool.",
                "operationId": "add-pool",
                "parameters": [
                    {
                        "description": "Pool object",
                        "name": "pool",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Pool"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/pools/{id}": {
            "get": {
                "description": "Get a particular pool by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a pool.",
                "operationId": "get-pool",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a pool in the database. Provide all required fields, if optional fields not provided they will be removed.\nNote: The Pool object shown in Parameters below includes\nrelated objects, e.g. Nodes, Shares, Accounts and Transfers. A request body that includes these\nobjects will be accepted, but they will not be updated. Call the PUT method\nfor those objects individually to modify them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing pool.",
                "operationId": "replace-pool",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Pool object",
                        "name": "node",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Pool"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a pool from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a pool.",
                "operationId": "delete-pool",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a pool in the database.  Provide one or more fields to update.\nNote: The Pool object shown in Parameters below includes\nrelated objects, e.g. Nodes,Shares,Accounts and Transfers.  A request body that includes these\nobjects will be accepted, but they will not be updated.  Call the PUT/PATCH method\nfor those objects to modify them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing pool.",
                "operationId": "update-pool",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Pool object",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Pool"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/shares": {
            "get": {
                "description": "Get all shares from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all shares.",
                "operationId": "get-shares",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "share search by userid",
                        "name": "userid",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "share search by companyid",
                        "name": "companyid",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "share search by poolid",
                        "name": "poolid",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "share search by percentage",
                        "name": "percentage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new Threeport share to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new Threeport share.",
                "operationId": "add-share",
                "parameters": [
                    {
                        "description": "Share object",
                        "name": "share",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Share"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/shares/{id}": {
            "get": {
                "description": "Get a particular share by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a share.",
                "operationId": "get-share",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a share in the database. Provide all required fields, if optional fields not provided they will be removed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing share.",
                "operationId": "replace-share",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Share object",
                        "name": "share",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Share"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a share from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a share.",
                "operationId": "delete-share",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a share in the database.  Must provide all fields.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing share.",
                "operationId": "update-share",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Share object",
                        "name": "share",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Share"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/tokens": {
            "get": {
                "description": "Get all tokens from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all tokens.",
                "operationId": "get-tokens",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "token search by name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "token search by networkid",
                        "name": "networkid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new Threeport token to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new Threeport token.",
                "operationId": "add-token",
                "parameters": [
                    {
                        "description": "Token object",
                        "name": "token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Token"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/tokens/{id}": {
            "get": {
                "description": "Get a particular token by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a token.",
                "operationId": "get-token",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces token in the database. Provide all required fields, if optional fields not provided they will be removed.\nNote: The Token object shown in Parameters below includes\nrelated objects, e.g. Transactions. A request body that includes Transactions\nwill be accepted, but Transactions will not be updated. Call the PUT method to modify Transactions.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing token.",
                "operationId": "update-token",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Token object",
                        "name": "token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a token from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a token.",
                "operationId": "delete-token",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a token in the database.  Must provide all fields.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing token.",
                "operationId": "update-token",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Token object",
                        "name": "token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/transactions": {
            "get": {
                "description": "Get all transactions from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all transactions.",
                "operationId": "get-transactions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "transaction search by type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "transaction search by blockid",
                        "name": "blockid",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "transaction search by toaccountid",
                        "name": "toaccountid",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "transaction search by fromaccountid",
                        "name": "fromaccountid",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "transaction search by tokenid",
                        "name": "tokenid",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "transaction search by amount",
                        "name": "amount",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "transaction search by fee",
                        "name": "fee",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new Threeport transaction to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new Threeport transaction.",
                "operationId": "add-transaction",
                "parameters": [
                    {
                        "description": "Transaction object",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Transaction"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/transactions/{id}": {
            "get": {
                "description": "Get a particular transaction by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a transaction.",
                "operationId": "get-transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces transaction in the database. Provide all required fields, if optional fields not provided they will be removed.\nNote: The Transaction object shown in Parameters below includes\nrelated objects, e.g. Transfer. A request body that includes Transfer\nwill be accepted, but Transfer will not be updated. Call the PUT method to modify Transfer.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing transaction.",
                "operationId": "update-transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transaction object",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Transaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a transaction from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a transaction.",
                "operationId": "delete-transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a transaction in the database.  Provide one or more fields to update.\nNote: The Transaction object shown in Parameters below includes\nrelated objects, e.g. Transfer.  A request body that includes these\nobjects will be accepted, but they will not be updated.  Call the PUT/PATCH method\nfor those objects to modify them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing transaction.",
                "operationId": "update-transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transaction object",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Transaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/transfers": {
            "get": {
                "description": "Get all transfers from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all transfers.",
                "operationId": "get-transfers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "transfer search by transactionid",
                        "name": "transactionid",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "transfer search by poolid",
                        "name": "poolid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "transfer search by type",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new Threeport transfer to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new Threeport transfer.",
                "operationId": "add-transfer",
                "parameters": [
                    {
                        "description": "Transfer object",
                        "name": "transfer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Transfer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/transfers/{id}": {
            "get": {
                "description": "Get a particular transfer by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a transfer.",
                "operationId": "get-transfer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a transfer in the database.  Must provide all fields.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing transfer.",
                "operationId": "update-transfer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transfer object",
                        "name": "transfer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Transfer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a transfer from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a transfer.",
                "operationId": "delete-transfer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Transfer"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a transfer in the database.  Must provide all fields.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing transfer.",
                "operationId": "update-transfer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transfer object",
                        "name": "transfer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Transfer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/users": {
            "get": {
                "description": "Get users from the database.  Can filter with query parameters.",
                "produces": [
                    "application/json"
                ],
                "summary": "gets users.",
                "operationId": "get-users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user search by email address",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "user search by first name",
                        "name": "firstname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "user search by last name",
                        "name": "lastname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "user search by date of birth",
                        "name": "dateofbirth",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "user search by company",
                        "name": "companyid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "user search by country of residence",
                        "name": "country",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "user search by nationality",
                        "name": "nationality",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "user search by hasmfaconfigured",
                        "name": "hasmfaconfigured",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new Threeport user to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new Threeport user.",
                "operationId": "add-user",
                "parameters": [
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/users/{id}": {
            "get": {
                "description": "Get a particular user by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a user.",
                "operationId": "get-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a user in the database. Provide all required fields, if optional fields not provided they will be removed.\nNote: The User object shown in Parameters below includes\nrelated objects, e.g. Shares. A request body that includes Shares\nwill be accepted, but Shares will not be updated. Call the PUT method\nfor Shares to modify.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing user.",
                "operationId": "replace-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Authenticate a particular user by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "authenticates a user.",
                "operationId": "auth-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UserPassword object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UserPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.User"
                        }
                    },
                    "401": {
                        "description": "Not Authorized",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a user from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a user.",
                "operationId": "delete-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a user in the database.  Provide one or more fields to update.\nNote: The User object shown in Parameters below includes\nthe related Shares objects.  A request body that includes this\nobject will be accepted but they will not be patched.  Call the PATCH method\nfor that object to modify them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing user.",
                "operationId": "update-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/usersidp": {
            "post": {
                "description": "Add a new Authentik Idp user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new Authentik Idp user.",
                "operationId": "add-user-idp",
                "parameters": [
                    {
                        "description": "UserIdp object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.UserIdp"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload_cluster": {
            "post": {
                "description": "Add a new workload cluster to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new workload cluster.",
                "operationId": "add-workloadCluster",
                "parameters": [
                    {
                        "description": "WorkloadCluster object",
                        "name": "workloadCluster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadCluster"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload_clusters": {
            "get": {
                "description": "Get all workload clusters from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all workload clusters.",
                "operationId": "get-workloadClusters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workload clusters search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Query parameter is not a valid integer value",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload_clusters/{id}": {
            "get": {
                "description": "Get a particular workload cluster by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a workload cluster.",
                "operationId": "get-workloadCluster",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a workload instance in the database. Provide all required fields, if optional fields not provided they will be removed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing workload instance.",
                "operationId": "replace-workloadInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadInstance object",
                        "name": "inst",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a workload cluster from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a workload cluster.",
                "operationId": "delete-workloadCluster",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a workload cluster in the database.  Provide one or more fields to update.\nNote: The WorkloadCluster object shown in Parameters below includes\nrelated objects, e.g. Users and Shares.  A request body that includes these\nobjects will be accepted but they will not be patched.  Call the PATCH method\nfor those objects to modify them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing workload cluster.",
                "operationId": "update-workloadCluster",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadCluster object",
                        "name": "workloadCluster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadCluster"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload_definition": {
            "post": {
                "description": "Add a new workload definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new workload definition.",
                "operationId": "add-workloadDefinition",
                "parameters": [
                    {
                        "description": "WorkloadDefinition object",
                        "name": "workloadDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload_definitions": {
            "get": {
                "description": "Get all workload definitions from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all workload definitions.",
                "operationId": "get-workloadDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workload definitions search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Query parameter is not a valid integer value",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload_definitions/{id}": {
            "get": {
                "description": "Get a particular workload definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a workload definition.",
                "operationId": "get-workloadDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a workload definition in the database. Provide all required fields, if optional fields not provided they will be removed.\nNote: The WorkloadDefinition object shown in Parameters below includes\nrelated objects, e.g. WorkloadResourceDefinitions and WorkloadInstances. A request body that includes WorkloadInstances\nwill be accepted, but they will not be updated. Call the PUT method\nfor WorkloadInstances to modify.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing workload cluster.",
                "operationId": "replace-workloadDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadDefinition object",
                        "name": "definition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a workload definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a workload definition.",
                "operationId": "delete-workloadDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a workload definition in the database.  Provide one or more fields to update.\nNote: The WorkloadDefinition object shown in Parameters below includes\nrelated objects, e.g. WorkloadResourceDefinitions and WorkloadInstances.  A request body that includes these\nobjects will be accepted but they will not be patched.  Call the PATCH method\nfor those objects to modify them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing workload definition.",
                "operationId": "update-workloadDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadDefinition object",
                        "name": "workloadDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload_instance": {
            "post": {
                "description": "Add a new workload instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new workload instance.",
                "operationId": "add-workloadInstance",
                "parameters": [
                    {
                        "description": "WorkloadInstance object",
                        "name": "workloadInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload_instances": {
            "get": {
                "description": "Get all workload instances from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all workload instances.",
                "operationId": "get-workloadInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workload instances search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Query parameter is not a valid integer value",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload_instances/{id}": {
            "get": {
                "description": "Get a particular workload instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a workload instance.",
                "operationId": "get-workloadInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a workload instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a workload instance.",
                "operationId": "delete-workloadInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a workload instance in the database.  Provide one or more fields to update.\nNote: The WorkloadInstance object shown in Parameters below includes\nrelated objects, e.g. Users and Shares.  A request body that includes these\nobjects will be accepted but they will not be patched.  Call the PATCH method\nfor those objects to modify them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing workload instance.",
                "operationId": "update-workloadInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadInstance object",
                        "name": "workloadInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload_resource_definition_sets": {
            "post": {
                "description": "Add a set of new workload resource definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new set of workload resource definitions.",
                "operationId": "add-workloadResourceDefinitions",
                "parameters": [
                    {
                        "description": "WorkloadResourceDefinition object array",
                        "name": "workloadResourceDefinitions",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v0.WorkloadResourceDefinition"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload_resource_definitions": {
            "get": {
                "description": "Get all workload resource definitions from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all workload resource definitions.",
                "operationId": "get-workloadResourceDefinitions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "workload resource definitions search by workload definition ID",
                        "name": "workloaddefinitionid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Query parameter is not a valid integer value",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new workload resource definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new workload resource definition.",
                "operationId": "add-workloadResourceDefinition",
                "parameters": [
                    {
                        "description": "WorkloadResourceDefinition object",
                        "name": "workloadResourceDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadResourceDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload_resource_definitions/{id}": {
            "get": {
                "description": "Get a particular workload resource definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a workload resource definition.",
                "operationId": "get-workloadResourceDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a workload resource definition in the database. Provide all required fields, if optional fields not provided they will be removed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing  workload resource definition.",
                "operationId": "replace-workloadResourceDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadCluster object",
                        "name": "wrd",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadResourceDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a workload resource definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a workload resource definition.",
                "operationId": "delete-workloadResourceDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a workload resource definition in the database.  Provide one or more fields to update.\nNote: The WorkloadResourceDefinition object shown in Parameters below includes\nrelated objects, e.g. Users and Shares.  A request body that includes these\nobjects will be accepted but they will not be patched.  Call the PATCH method\nfor those objects to modify them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing workload resource definition.",
                "operationId": "update-workloadResourceDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadResourceDefinition object",
                        "name": "workloadResourceDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadResourceDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload_service_dependencies": {
            "get": {
                "description": "Get all workload service dependencies from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all workload service dependencies.",
                "operationId": "get-workloadServiceDependencies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workload service dependencies search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Query parameter is not a valid integer value",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload_service_dependencies/{id}": {
            "get": {
                "description": "Get a particular workload service dependency by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a workload service dependency.",
                "operationId": "get-workloadServiceDependency",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a workload service dependency in the database.  Provide one or more fields to update.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing workload service dependency.",
                "operationId": "replace-workloadServiceDependency",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadServiceDependency object",
                        "name": "workloadServiceDependency",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadServiceDependency"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a workload service dependency from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a workload service dependency.",
                "operationId": "delete-workloadServiceDependency",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a workload service dependency in the database.  Provide one or more fields to update.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing workload service dependency.",
                "operationId": "update-workloadServiceDependency",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadServiceDependency object",
                        "name": "workloadServiceDependency",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadServiceDependency"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload_service_dependency": {
            "post": {
                "description": "Add a new workload service dependency to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new workload service dependency.",
                "operationId": "add-workloadServiceDependency",
                "parameters": [
                    {
                        "description": "WorkloadServiceDependency object",
                        "name": "workloadServiceDependency",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadServiceDependency"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "description": "Get a version of REST API.",
                "produces": [
                    "application/json"
                ],
                "summary": "gets an REST API version.",
                "operationId": "get-api-version",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersion"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersion"
                        }
                    }
                }
            }
        },
        "/workload_cluster/versions": {
            "get": {
                "description": "Returns the supported versions for the WorkloadCluster.",
                "produces": [
                    "application/json"
                ],
                "summary": "gets supported versions the WorkloadCluster.",
                "operationId": "workloadCluster-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/workload_definition/versions": {
            "get": {
                "description": "Returns the supported versions for the WorkloadDefinition.",
                "produces": [
                    "application/json"
                ],
                "summary": "gets supported versions the WorkloadDefinition.",
                "operationId": "workloadDefinitions-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/workload_instance/versions": {
            "get": {
                "description": "Returns the supported versions for the WorkloadInstance.",
                "produces": [
                    "application/json"
                ],
                "summary": "gets supported versions the WorkloadInstance.",
                "operationId": "workloadInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/workload_resource_definitions/versions": {
            "get": {
                "description": "Returns the supported versions for the WorkloadResourceDefinition.",
                "produces": [
                    "application/json"
                ],
                "summary": "gets supported versions the WorkloadResourceDefinition.",
                "operationId": "workloadResourceDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/workload_service_dependency/versions": {
            "get": {
                "description": "Returns the supported versions for the WorkloadServiceDependency.",
                "produces": [
                    "application/json"
                ],
                "summary": "gets supported versions the WorkloadServiceDependency.",
                "operationId": "workloadServiceDependency-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.RESTAPIVersion": {
            "type": "object",
            "required": [
                "API",
                "Version"
            ],
            "properties": {
                "API": {
                    "description": "Required.  REST API name.",
                    "type": "string"
                },
                "Version": {
                    "description": "Required.  REST API version.",
                    "type": "string"
                }
            }
        },
        "api.RESTAPIVersions": {
            "type": "object",
            "required": [
                "API",
                "Versions"
            ],
            "properties": {
                "API": {
                    "description": "Required.  REST API resource name.",
                    "type": "string"
                },
                "Versions": {
                    "description": "Required.  REST API resource versions.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "handlers.UserPassword": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "v0.Account": {
            "type": "object",
            "required": [
                "Address",
                "NetworkID"
            ],
            "properties": {
                "Address": {
                    "description": "Required.  The address to which and from which tokens are sent.",
                    "type": "string"
                },
                "FromTransactions": {
                    "description": "Optional.  The transactions which sent tokens from this account.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.Transaction"
                    }
                },
                "NetworkID": {
                    "description": "Required.  The network the account belongs to.",
                    "type": "integer"
                },
                "NodeID": {
                    "description": "Optional.  The network node the account is associated with.",
                    "type": "integer"
                },
                "PoolID": {
                    "description": "Optional.  The pool the account is associated with.",
                    "type": "integer"
                },
                "ToTransactions": {
                    "description": "Optional.  The transactions which sent tokens to this account.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.Transaction"
                    }
                }
            }
        },
        "v0.Block": {
            "type": "object",
            "required": [
                "Height",
                "NetworkID"
            ],
            "properties": {
                "Height": {
                    "description": "Required.  The sequential height of the block on the chain.",
                    "type": "integer"
                },
                "NetworkID": {
                    "description": "Required.  The network the block records state on.",
                    "type": "integer"
                },
                "Transactions": {
                    "description": "Optional.  The transactions written to this block.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.Transaction"
                    }
                }
            }
        },
        "v0.CoincoverLevelUSD": {
            "type": "integer",
            "enum": [
                10000,
                20000,
                30000
            ],
            "x-enum-varnames": [
                "CoincoverLevelUSD10000",
                "CoincoverLevelUSD20000",
                "CoincoverLevelUSD30000"
            ]
        },
        "v0.CoincoverOrder": {
            "type": "object",
            "required": [
                "Active",
                "LevelUSD",
                "NodeID",
                "PublicKey",
                "Signature",
                "Start"
            ],
            "properties": {
                "Active": {
                    "description": "Required.  Active is true if the coincover order is current and active.",
                    "type": "boolean"
                },
                "CoincoverOrderID": {
                    "description": "Optional.  The OrderID in the coincover database.",
                    "type": "string"
                },
                "End": {
                    "description": "Optional.  End date of the coverage.",
                    "type": "string"
                },
                "LevelUSD": {
                    "description": "Required.  The level of coverage for this order.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v0.CoincoverLevelUSD"
                        }
                    ]
                },
                "NodeID": {
                    "description": "Required.  The node covered under this order.",
                    "type": "integer"
                },
                "PublicKey": {
                    "description": "Required.  RSA Public key associated with a node and user.",
                    "type": "string"
                },
                "Signature": {
                    "description": "Required.  Signature from the encryption key response provided by coincover.",
                    "type": "string"
                },
                "Start": {
                    "description": "Required.  Start data of the coverage.",
                    "type": "string"
                }
            }
        },
        "v0.Company": {
            "type": "object",
            "required": [
                "Name"
            ],
            "properties": {
                "Name": {
                    "description": "Required.  Company's legal name.",
                    "type": "string"
                },
                "Shares": {
                    "description": "Optional.  An array of share IDs the company owns.  A share has a\npercentage of a pool.  If no shares are nominated, a default share of\n100% in a default pool will be created for a user.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.Share"
                    }
                },
                "Users": {
                    "description": "Optional.  Users that represent the company.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.User"
                    }
                }
            }
        },
        "v0.Meta": {
            "type": "object",
            "properties": {
                "Page": {
                    "description": "current Page",
                    "type": "integer",
                    "example": 1
                },
                "Size": {
                    "description": "Size of the current page (number of returned Object elements)",
                    "type": "integer",
                    "example": 1
                },
                "TotalCount": {
                    "description": "TotalCount of returned Object elements",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v0.Network": {
            "type": "object",
            "required": [
                "Name"
            ],
            "properties": {
                "Accounts": {
                    "description": "Optional.  The accounts used on the network.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.Account"
                    }
                },
                "Blocks": {
                    "description": "Optional.  The blocks on the blockchain for the network.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.Block"
                    }
                },
                "Name": {
                    "description": "Required.  The name of the network.",
                    "type": "string"
                },
                "Nodes": {
                    "description": "Optional.  The nodes on the network managed by Threeport.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.Node"
                    }
                },
                "Tokens": {
                    "description": "Optional.  The tokens that represent value on the network.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.Token"
                    }
                }
            }
        },
        "v0.Node": {
            "type": "object",
            "required": [
                "NetworkID",
                "PoolID"
            ],
            "properties": {
                "Account": {
                    "description": "Optional.  The primary network account the node is using.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v0.Account"
                        }
                    ]
                },
                "CoincoverOrder": {
                    "description": "Optional.  The coincover order providing disaster recovery and coverage\nfor the tokens staked by the node.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v0.CoincoverOrder"
                        }
                    ]
                },
                "NetworkID": {
                    "description": "Required.  The network that the node participates in.",
                    "type": "integer"
                },
                "PoolID": {
                    "description": "Required.  The staking pool this node belongs to.",
                    "type": "integer"
                }
            }
        },
        "v0.NullableTime": {
            "type": "object"
        },
        "v0.ObjectType": {
            "type": "string",
            "enum": [
                "Account",
                "Block",
                "CoincoverOrder",
                "Company",
                "Network",
                "Node",
                "Pool",
                "Share",
                "Token",
                "Transaction",
                "Transfer",
                "User",
                "UserIdp",
                "WorkloadCluster",
                "WorkloadDefinition",
                "WorkloadResourceDefinition",
                "WorkloadInstance",
                "WorkloadServiceDependency"
            ],
            "x-enum-varnames": [
                "OBJECTTYPEACCOUNT",
                "OBJECTTYPEBLOCK",
                "OBJECTTYPECOINCOVERORDER",
                "OBJECTTYPECOMPANY",
                "OBJECTTYPENETWORK",
                "OBJECTTYPENODE",
                "OBJECTTYPEPOOL",
                "OBJECTTYPESHARE",
                "OBJECTTYPETOKEN",
                "OBJECTTYPETRANSACTION",
                "OBJECTTYPETRANSFER",
                "OBJECTTYPEUSER",
                "OBJECTTYPEUSERIDP",
                "OBJECTTYPEWORKLOADCLUSTER",
                "OBJECTTYPEWORKLOADDEFINITION",
                "OBJECTTYPEWORKLOADRESOURCEDEFINITION",
                "OBJECTTYPEWORKLOADINSTANCE",
                "OBJECTTYPEWORKLOADSERVICEDEPENDENCY"
            ]
        },
        "v0.Pool": {
            "type": "object",
            "required": [
                "Name"
            ],
            "properties": {
                "Accounts": {
                    "description": "Optional.  The accounts used to manage pool tokens.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.Account"
                    }
                },
                "Name": {
                    "description": "Required.  Pool name.",
                    "type": "string"
                },
                "Nodes": {
                    "description": "Optional.  The staking nodes that are a part of the pool.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.Node"
                    }
                },
                "Shares": {
                    "description": "Optional.  The shares that link the users and their percentage of\nownership to the pool.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.Share"
                    }
                },
                "Transfers": {
                    "description": "Optional.  The transfers of tokens conducted for this pool.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.Transfer"
                    }
                }
            }
        },
        "v0.Response": {
            "description": "Meta info with ObjectType array of Data of Object",
            "type": "object",
            "properties": {
                "Data": {
                    "description": "Data contains array of returned Object elements",
                    "type": "array",
                    "items": {}
                },
                "Meta": {
                    "description": "Meta contains PageRequestParams (current page and size of current page) and TotalCount (number of returned Object elements)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v0.Meta"
                        }
                    ]
                },
                "Status": {
                    "description": "Status represents an error that occurred while handling a request",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v0.Status"
                        }
                    ]
                },
                "Type": {
                    "description": "Type contains ObjectType of returned Data elements",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v0.ObjectType"
                        }
                    ],
                    "example": "Transfer"
                }
            }
        },
        "v0.Share": {
            "type": "object",
            "required": [
                "Percentage",
                "PoolID"
            ],
            "properties": {
                "CompanyID": {
                    "description": "Required if no UserID.  The company that owns a share in a pool.",
                    "type": "integer"
                },
                "Percentage": {
                    "description": "Required.  The percentage ownership of the pool owned by the user.",
                    "type": "number"
                },
                "PoolID": {
                    "description": "Required.  The pool this share is for.",
                    "type": "integer"
                },
                "UserID": {
                    "description": "Required if no CompanyID.  The user that owns a share in a pool.",
                    "type": "integer"
                }
            }
        },
        "v0.Status": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "The HTTP response status code, e.g. 200 | 201 | 500",
                    "type": "integer",
                    "example": 200
                },
                "error": {
                    "description": "The response error message if applicable, defaults to \"\"",
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "description": "The HTTP response status code message, e.g. OK | Created | Internal Server Error",
                    "type": "string",
                    "example": "OK"
                }
            }
        },
        "v0.Token": {
            "type": "object",
            "required": [
                "Name",
                "NetworkID"
            ],
            "properties": {
                "Name": {
                    "description": "Required.  The name of the token.",
                    "type": "string"
                },
                "NetworkID": {
                    "description": "Required.  The network the token is used to represent value on.",
                    "type": "integer"
                },
                "Transactions": {
                    "description": "Optional. Transactions performed with this token.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.Transaction"
                    }
                }
            }
        },
        "v0.Transaction": {
            "type": "object",
            "required": [
                "BlockID",
                "Fee",
                "Hash",
                "Type"
            ],
            "properties": {
                "Amount": {
                    "description": "Optional.  The amount of tokens sent.",
                    "type": "integer"
                },
                "BlockID": {
                    "description": "Required.  The block on which the transaction was written.",
                    "type": "integer"
                },
                "Fee": {
                    "description": "Required.  The fee for the transaction.",
                    "type": "integer"
                },
                "FromAccountID": {
                    "description": "Optional.  The account ID from which tokens were sent.",
                    "type": "integer"
                },
                "Hash": {
                    "description": "Required.  The ID of the operation on the network.",
                    "type": "string"
                },
                "ToAccountID": {
                    "description": "Optional.  The account ID to which tokens were sent.",
                    "type": "integer"
                },
                "TokenID": {
                    "description": "Optional.  The token transferred in the transaction.",
                    "type": "integer"
                },
                "Transfer": {
                    "description": "Optional.  Transfer executed with this transaction.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v0.Transfer"
                        }
                    ]
                },
                "Type": {
                    "description": "Required.  The type of transaction.\n`send` is a transfer of tokens from one account to another.\n`proof` is a verification that work was done.\n`claim` is a collection of new tokens for work done.",
                    "type": "string"
                }
            }
        },
        "v0.Transfer": {
            "type": "object",
            "required": [
                "PoolID",
                "TransactionID",
                "Type"
            ],
            "properties": {
                "PoolID": {
                    "description": "Required. The pool for which the sweep was conducted.",
                    "type": "integer"
                },
                "TransactionID": {
                    "description": "Required.  The transaction where the sweep was recorded on the\nblockchain.",
                    "type": "integer"
                },
                "Type": {
                    "description": "Required.  The type of transfer made.\n`fund` is a transfer of tokens from shareholder that is added to the\nvalue of the pool's assets.\n`sweep` is a transfer of tokens from a pool node's account that is added\nto the value of the pool's assets.\n`remittance` is a transfer of tokens out of a pool's assets back to the\nshareholder.",
                    "type": "string"
                }
            }
        },
        "v0.User": {
            "type": "object",
            "required": [
                "CountryOfResidence",
                "DateOfBirth",
                "Email",
                "FirstName",
                "LastName",
                "Nationality",
                "Password"
            ],
            "properties": {
                "CompanyID": {
                    "description": "Optional.  Company that the user represents.",
                    "type": "integer"
                },
                "CountryOfResidence": {
                    "description": "Required.  Country where user resides.",
                    "type": "string"
                },
                "DateOfBirth": {
                    "description": "Required.  User's date of birth.  Format: `2006-01-02T00:00:00Z`",
                    "type": "string"
                },
                "Email": {
                    "description": "Required.  User's email address.",
                    "type": "string"
                },
                "FirstName": {
                    "description": "Required.  User's first name.",
                    "type": "string"
                },
                "HasMfaConfigured": {
                    "description": "Optional.  UI Flag to track if the user has set up 2FA.",
                    "type": "boolean"
                },
                "LastName": {
                    "description": "Required.  User's last name.",
                    "type": "string"
                },
                "Nationality": {
                    "description": "Required.  Country of which user is a citizen.",
                    "type": "string"
                },
                "OtpSecret": {
                    "description": "Optional.  UI Two-factor authentication OTP secret.",
                    "type": "string"
                },
                "Password": {
                    "description": "Required.  User's account password.",
                    "type": "string"
                },
                "PasswordResetToken": {
                    "description": "Optional.  UI Token used for password recovery.",
                    "type": "string"
                },
                "Shares": {
                    "description": "Optional.  An array of share IDs the user owns.  A share has a\npercentage of a pool.  If no shares are nominated, a default share of\n100% in a default pool will be created for a user.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.Share"
                    }
                }
            }
        },
        "v0.UserIdp": {
            "type": "object",
            "required": [
                "name",
                "username"
            ],
            "properties": {
                "attributes": {
                    "type": "object",
                    "additionalProperties": true
                },
                "email": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "is_active": {
                    "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                    "type": "boolean"
                },
                "last_login": {
                    "$ref": "#/definitions/v0.NullableTime"
                },
                "name": {
                    "description": "User's display name.",
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "v0.WorkloadCluster": {
            "type": "object",
            "required": [
                "APIEndpoint",
                "Certificate",
                "Key",
                "Name",
                "Provider"
            ],
            "properties": {
                "APIEndpoint": {
                    "description": "Required.  The network endpoint at which to reach the kube-api.",
                    "type": "string"
                },
                "CACertificate": {
                    "description": "Optional.  The CA certificate used to generate the cert and key if\nself-signed.",
                    "type": "string"
                },
                "Certificate": {
                    "description": "Required.  The client certificate to use for auth to the kube-api.",
                    "type": "string"
                },
                "Key": {
                    "description": "Required.  The client key to use for auth to the kube-api.",
                    "type": "string"
                },
                "Name": {
                    "description": "Required.  An arbitrary name for the cluster.",
                    "type": "string"
                },
                "Provider": {
                    "description": "Required.  The provider or technology used to provision the cluster.",
                    "type": "string"
                },
                "Region": {
                    "description": "Optional.  The geographical region for the cluster roughly corresponding\nto cloud provider regions.",
                    "type": "string"
                },
                "WorkloadInstance": {
                    "description": "The associated workload instances running on this cluster.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.WorkloadInstance"
                    }
                }
            }
        },
        "v0.WorkloadDefinition": {
            "type": "object",
            "required": [
                "Name",
                "YAMLDocument"
            ],
            "properties": {
                "CompanyID": {
                    "description": "Required if no UserID.  The company that owns the workload.",
                    "type": "integer"
                },
                "Name": {
                    "description": "Required.  An arbitrary name for the workload.",
                    "type": "string"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by workload controller",
                    "type": "boolean"
                },
                "UserID": {
                    "description": "Required if no CompanyID.  The user that owns the workload.",
                    "type": "integer"
                },
                "WorkloadInstance": {
                    "description": "The associated workload instances that are deployed from this definition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.WorkloadInstance"
                    }
                },
                "WorkloadResourceDefinitions": {
                    "description": "The associated workload resource definitions that are derived.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.WorkloadResourceDefinition"
                    }
                },
                "YAMLDocument": {
                    "description": "Required.  The yaml manifests that define the workload configuration.",
                    "type": "string"
                }
            }
        },
        "v0.WorkloadInstance": {
            "type": "object",
            "required": [
                "Name",
                "WorkloadClusterID",
                "WorkloadDefinitionID"
            ],
            "properties": {
                "Name": {
                    "description": "Required.  An arbitrary name for the deployed instance.",
                    "type": "string"
                },
                "WorkloadClusterID": {
                    "description": "Required.  WorkloadClusterID is the cluster to which the workload is\ndeployed.",
                    "type": "integer"
                },
                "WorkloadDefinitionID": {
                    "description": "Required.  WorkloadDefinitionID is the definition used to configure the workload\ninstance.",
                    "type": "integer"
                }
            }
        },
        "v0.WorkloadResourceDefinition": {
            "type": "object",
            "required": [
                "JSONDefinition",
                "WorkloadDefinitionID"
            ],
            "properties": {
                "JSONDefinition": {
                    "description": "Required.  The individual manifest in JSON format.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "WorkloadDefinitionID": {
                    "description": "Required.  The workload definition this resource belongs to.",
                    "type": "integer"
                }
            }
        },
        "v0.WorkloadServiceDependency": {
            "type": "object",
            "required": [
                "Name",
                "UpstreamHost",
                "UpstreamPath",
                "WorkloadInstanceID"
            ],
            "properties": {
                "Name": {
                    "description": "Required.  An arbitrary name for the deployed instance.",
                    "type": "string"
                },
                "UpstreamHost": {
                    "description": "Required.  The hostname of the upstream service.",
                    "type": "string"
                },
                "UpstreamPath": {
                    "description": "Required.  The path for the upstream service.",
                    "type": "string"
                },
                "WorkloadInstanceID": {
                    "description": "Required.  WorkloadInstanceID is the workload instance for which the\nservice dependency is being managed.",
                    "type": "integer"
                }
            }
        }
    }
}