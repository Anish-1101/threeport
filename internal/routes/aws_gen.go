// generated by 'threeport-codegen api-model' - do not edit

package routes

import (
	echo "github.com/labstack/echo/v4"
	handlers "github.com/threeport/threeport/internal/handlers"
	v0 "github.com/threeport/threeport/pkg/api/v0"
)

// AwsAccountRoutes sets up all routes for the AwsAccount handlers.
func AwsAccountRoutes(e *echo.Echo, h *handlers.Handler) {
	e.GET("/aws_accounts/versions", h.GetAwsAccountVersions)

	e.POST(v0.PathAwsAccounts, h.AddAwsAccount)
	e.GET(v0.PathAwsAccounts, h.GetAwsAccounts)
	e.GET(v0.PathAwsAccounts+"/:id", h.GetAwsAccount)
	e.PATCH(v0.PathAwsAccounts+"/:id", h.UpdateAwsAccount)
	e.PUT(v0.PathAwsAccounts+"/:id", h.ReplaceAwsAccount)
	e.DELETE(v0.PathAwsAccounts+"/:id", h.DeleteAwsAccount)
}

// AwsEksClusterDefinitionRoutes sets up all routes for the AwsEksClusterDefinition handlers.
func AwsEksClusterDefinitionRoutes(e *echo.Echo, h *handlers.Handler) {
	e.GET("/aws_eks_cluster_definitions/versions", h.GetAwsEksClusterDefinitionVersions)

	e.POST(v0.PathAwsEksClusterDefinitions, h.AddAwsEksClusterDefinition)
	e.GET(v0.PathAwsEksClusterDefinitions, h.GetAwsEksClusterDefinitions)
	e.GET(v0.PathAwsEksClusterDefinitions+"/:id", h.GetAwsEksClusterDefinition)
	e.PATCH(v0.PathAwsEksClusterDefinitions+"/:id", h.UpdateAwsEksClusterDefinition)
	e.PUT(v0.PathAwsEksClusterDefinitions+"/:id", h.ReplaceAwsEksClusterDefinition)
	e.DELETE(v0.PathAwsEksClusterDefinitions+"/:id", h.DeleteAwsEksClusterDefinition)
}

// AwsEksClusterInstanceRoutes sets up all routes for the AwsEksClusterInstance handlers.
func AwsEksClusterInstanceRoutes(e *echo.Echo, h *handlers.Handler) {
	e.GET("/aws_eks_cluster_instances/versions", h.GetAwsEksClusterInstanceVersions)

	e.POST(v0.PathAwsEksClusterInstances, h.AddAwsEksClusterInstance)
	e.GET(v0.PathAwsEksClusterInstances, h.GetAwsEksClusterInstances)
	e.GET(v0.PathAwsEksClusterInstances+"/:id", h.GetAwsEksClusterInstance)
	e.PATCH(v0.PathAwsEksClusterInstances+"/:id", h.UpdateAwsEksClusterInstance)
	e.PUT(v0.PathAwsEksClusterInstances+"/:id", h.ReplaceAwsEksClusterInstance)
	e.DELETE(v0.PathAwsEksClusterInstances+"/:id", h.DeleteAwsEksClusterInstance)
}

// AwsRelationalDatabaseDefinitionRoutes sets up all routes for the AwsRelationalDatabaseDefinition handlers.
func AwsRelationalDatabaseDefinitionRoutes(e *echo.Echo, h *handlers.Handler) {
	e.GET("/aws_relational_database_definitions/versions", h.GetAwsRelationalDatabaseDefinitionVersions)

	e.POST(v0.PathAwsRelationalDatabaseDefinitions, h.AddAwsRelationalDatabaseDefinition)
	e.GET(v0.PathAwsRelationalDatabaseDefinitions, h.GetAwsRelationalDatabaseDefinitions)
	e.GET(v0.PathAwsRelationalDatabaseDefinitions+"/:id", h.GetAwsRelationalDatabaseDefinition)
	e.PATCH(v0.PathAwsRelationalDatabaseDefinitions+"/:id", h.UpdateAwsRelationalDatabaseDefinition)
	e.PUT(v0.PathAwsRelationalDatabaseDefinitions+"/:id", h.ReplaceAwsRelationalDatabaseDefinition)
	e.DELETE(v0.PathAwsRelationalDatabaseDefinitions+"/:id", h.DeleteAwsRelationalDatabaseDefinition)
}

// AwsRelationalDatabaseInstanceRoutes sets up all routes for the AwsRelationalDatabaseInstance handlers.
func AwsRelationalDatabaseInstanceRoutes(e *echo.Echo, h *handlers.Handler) {
	e.GET("/aws_relational_database_instances/versions", h.GetAwsRelationalDatabaseInstanceVersions)

	e.POST(v0.PathAwsRelationalDatabaseInstances, h.AddAwsRelationalDatabaseInstance)
	e.GET(v0.PathAwsRelationalDatabaseInstances, h.GetAwsRelationalDatabaseInstances)
	e.GET(v0.PathAwsRelationalDatabaseInstances+"/:id", h.GetAwsRelationalDatabaseInstance)
	e.PATCH(v0.PathAwsRelationalDatabaseInstances+"/:id", h.UpdateAwsRelationalDatabaseInstance)
	e.PUT(v0.PathAwsRelationalDatabaseInstances+"/:id", h.ReplaceAwsRelationalDatabaseInstance)
	e.DELETE(v0.PathAwsRelationalDatabaseInstances+"/:id", h.DeleteAwsRelationalDatabaseInstance)
}
