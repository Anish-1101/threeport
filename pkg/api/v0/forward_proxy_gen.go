// generated by 'threeport-codegen api-model' - do not edit

package v0

import (
	"encoding/json"
	"fmt"
	notifications "github.com/threeport/threeport/pkg/notifications"
)

const (
	ObjectTypeForwardProxyDefinition ObjectType = "ForwardProxyDefinition"
	ObjectTypeForwardProxyInstance   ObjectType = "ForwardProxyInstance"

	ForwardProxyStreamName = "forwardProxyStream"

	ForwardProxyDefinitionSubject       = "forwardProxyDefinition.*"
	ForwardProxyDefinitionCreateSubject = "forwardProxyDefinition.create"
	ForwardProxyDefinitionUpdateSubject = "forwardProxyDefinition.update"
	ForwardProxyDefinitionDeleteSubject = "forwardProxyDefinition.delete"

	ForwardProxyInstanceSubject       = "forwardProxyInstance.*"
	ForwardProxyInstanceCreateSubject = "forwardProxyInstance.create"
	ForwardProxyInstanceUpdateSubject = "forwardProxyInstance.update"
	ForwardProxyInstanceDeleteSubject = "forwardProxyInstance.delete"

	PathForwardProxyDefinitions = "/v0/forward_proxy_definitions"
	PathForwardProxyInstances   = "/v0/forward_proxy_instances"
)

// GetForwardProxyDefinitionSubjects returns the NATS subjects
// for forward proxy definitions.
func GetForwardProxyDefinitionSubjects() []string {
	return []string{
		ForwardProxyDefinitionCreateSubject,
		ForwardProxyDefinitionUpdateSubject,
		ForwardProxyDefinitionDeleteSubject,
	}
}

// GetForwardProxyInstanceSubjects returns the NATS subjects
// for forward proxy instances.
func GetForwardProxyInstanceSubjects() []string {
	return []string{
		ForwardProxyInstanceCreateSubject,
		ForwardProxyInstanceUpdateSubject,
		ForwardProxyInstanceDeleteSubject,
	}
}

// GetForwardProxySubjects returns the NATS subjects
// for all forward proxy objects.
func GetForwardProxySubjects() []string {
	var forwardProxySubjects []string

	forwardProxySubjects = append(forwardProxySubjects, GetForwardProxyDefinitionSubjects()...)
	forwardProxySubjects = append(forwardProxySubjects, GetForwardProxyInstanceSubjects()...)

	return forwardProxySubjects
}

// NotificationPayload returns the notification payload that is delivered to the
// controller when a change is made.  It includes the object as presented by the
// client when the change was made.
func (fpd *ForwardProxyDefinition) NotificationPayload(requeue bool, lastDelay int64) (*[]byte, error) {
	notif := notifications.Notification{
		LastRequeueDelay: &lastDelay,
		Object:           fpd,
		Requeue:          requeue,
	}

	payload, err := json.Marshal(notif)
	if err != nil {
		return &payload, fmt.Errorf("failed to marshal notification payload %+v: %w", fpd, err)
	}

	return &payload, nil
}

// GetID returns the unique ID for the object.
func (fpd *ForwardProxyDefinition) GetID() uint {
	return *fpd.ID
}

// NotificationPayload returns the notification payload that is delivered to the
// controller when a change is made.  It includes the object as presented by the
// client when the change was made.
func (fpi *ForwardProxyInstance) NotificationPayload(requeue bool, lastDelay int64) (*[]byte, error) {
	notif := notifications.Notification{
		LastRequeueDelay: &lastDelay,
		Object:           fpi,
		Requeue:          requeue,
	}

	payload, err := json.Marshal(notif)
	if err != nil {
		return &payload, fmt.Errorf("failed to marshal notification payload %+v: %w", fpi, err)
	}

	return &payload, nil
}

// GetID returns the unique ID for the object.
func (fpi *ForwardProxyInstance) GetID() uint {
	return *fpi.ID
}
