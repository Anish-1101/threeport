// generated by 'threeport-sdk gen' - do not edit

package routes

import (
	echo "github.com/labstack/echo/v4"
	handlers "github.com/threeport/threeport/pkg/api-server/v0/handlers"
	v0 "github.com/threeport/threeport/pkg/api/v0"
)

// AzureAccountRoutes sets up all routes for the AzureAccount handlers.
func AzureAccountRoutes(e *echo.Echo, h *handlers.Handler) {
	e.GET("/azure-accounts/versions", h.GetAzureAccountVersions)

	e.POST(v0.PathAzureAccounts, h.AddAzureAccount)
	e.GET(v0.PathAzureAccounts, h.GetAzureAccounts)
	e.GET(v0.PathAzureAccounts+"/:id", h.GetAzureAccount)
	e.PATCH(v0.PathAzureAccounts+"/:id", h.UpdateAzureAccount)
	e.PUT(v0.PathAzureAccounts+"/:id", h.ReplaceAzureAccount)
	e.DELETE(v0.PathAzureAccounts+"/:id", h.DeleteAzureAccount)
}

// AzureAksKubernetesRuntimeDefinitionRoutes sets up all routes for the AzureAksKubernetesRuntimeDefinition handlers.
func AzureAksKubernetesRuntimeDefinitionRoutes(e *echo.Echo, h *handlers.Handler) {
	e.GET("/azure-aks-kubernetes-runtime-definitions/versions", h.GetAzureAksKubernetesRuntimeDefinitionVersions)

	e.POST(v0.PathAzureAksKubernetesRuntimeDefinitions, h.AddAzureAksKubernetesRuntimeDefinition)
	e.GET(v0.PathAzureAksKubernetesRuntimeDefinitions, h.GetAzureAksKubernetesRuntimeDefinitions)
	e.GET(v0.PathAzureAksKubernetesRuntimeDefinitions+"/:id", h.GetAzureAksKubernetesRuntimeDefinition)
	e.PATCH(v0.PathAzureAksKubernetesRuntimeDefinitions+"/:id", h.UpdateAzureAksKubernetesRuntimeDefinition)
	e.PUT(v0.PathAzureAksKubernetesRuntimeDefinitions+"/:id", h.ReplaceAzureAksKubernetesRuntimeDefinition)
	e.DELETE(v0.PathAzureAksKubernetesRuntimeDefinitions+"/:id", h.DeleteAzureAksKubernetesRuntimeDefinition)
}

// AzureAksKubernetesRuntimeInstanceRoutes sets up all routes for the AzureAksKubernetesRuntimeInstance handlers.
func AzureAksKubernetesRuntimeInstanceRoutes(e *echo.Echo, h *handlers.Handler) {
	e.GET("/azure-aks-kubernetes-runtime-instances/versions", h.GetAzureAksKubernetesRuntimeInstanceVersions)

	e.POST(v0.PathAzureAksKubernetesRuntimeInstances, h.AddAzureAksKubernetesRuntimeInstance)
	e.GET(v0.PathAzureAksKubernetesRuntimeInstances, h.GetAzureAksKubernetesRuntimeInstances)
	e.GET(v0.PathAzureAksKubernetesRuntimeInstances+"/:id", h.GetAzureAksKubernetesRuntimeInstance)
	e.PATCH(v0.PathAzureAksKubernetesRuntimeInstances+"/:id", h.UpdateAzureAksKubernetesRuntimeInstance)
	e.PUT(v0.PathAzureAksKubernetesRuntimeInstances+"/:id", h.ReplaceAzureAksKubernetesRuntimeInstance)
	e.DELETE(v0.PathAzureAksKubernetesRuntimeInstances+"/:id", h.DeleteAzureAksKubernetesRuntimeInstance)
}

// AzureRelationalDatabaseDefinitionRoutes sets up all routes for the AzureRelationalDatabaseDefinition handlers.
func AzureRelationalDatabaseDefinitionRoutes(e *echo.Echo, h *handlers.Handler) {
	e.GET("/azure-relational-database-definitions/versions", h.GetAzureRelationalDatabaseDefinitionVersions)

	e.POST(v0.PathAzureRelationalDatabaseDefinitions, h.AddAzureRelationalDatabaseDefinition)
	e.GET(v0.PathAzureRelationalDatabaseDefinitions, h.GetAzureRelationalDatabaseDefinitions)
	e.GET(v0.PathAzureRelationalDatabaseDefinitions+"/:id", h.GetAzureRelationalDatabaseDefinition)
	e.PATCH(v0.PathAzureRelationalDatabaseDefinitions+"/:id", h.UpdateAzureRelationalDatabaseDefinition)
	e.PUT(v0.PathAzureRelationalDatabaseDefinitions+"/:id", h.ReplaceAzureRelationalDatabaseDefinition)
	e.DELETE(v0.PathAzureRelationalDatabaseDefinitions+"/:id", h.DeleteAzureRelationalDatabaseDefinition)
}

// AzureRelationalDatabaseInstanceRoutes sets up all routes for the AzureRelationalDatabaseInstance handlers.
func AzureRelationalDatabaseInstanceRoutes(e *echo.Echo, h *handlers.Handler) {
	e.GET("/azure-relational-database-instances/versions", h.GetAzureRelationalDatabaseInstanceVersions)

	e.POST(v0.PathAzureRelationalDatabaseInstances, h.AddAzureRelationalDatabaseInstance)
	e.GET(v0.PathAzureRelationalDatabaseInstances, h.GetAzureRelationalDatabaseInstances)
	e.GET(v0.PathAzureRelationalDatabaseInstances+"/:id", h.GetAzureRelationalDatabaseInstance)
	e.PATCH(v0.PathAzureRelationalDatabaseInstances+"/:id", h.UpdateAzureRelationalDatabaseInstance)
	e.PUT(v0.PathAzureRelationalDatabaseInstances+"/:id", h.ReplaceAzureRelationalDatabaseInstance)
	e.DELETE(v0.PathAzureRelationalDatabaseInstances+"/:id", h.DeleteAzureRelationalDatabaseInstance)
}
